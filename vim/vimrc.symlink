set nocompatible               " be iMproved
filetype off                   " required by vundle


" ==== No Menus ===
:set guioptions-=m  "remove menu bar
:set guioptions-=T  "remove toolbar
:set guioptions-=r  "remove right-hand scroll bar
:set guioptions-=l  "remove left-hand scroll bar
:set guioptions-=b

:set number         "line numbering


" === Status Line ===
:set laststatus=2   "display the statusline all the time
set statusline=%<\ %n:%f\ %m%r%y%{\"[\".(&fenc==\"\"?&enc:&fenc).\"]\ \"}%=%-35.(line:\ %l\ of\ %L,\ col:\ %c%V\ (%P)%)

" === Navigation ===
" Relative numbers
function! NumberToggle()
  if(&relativenumber == 1)
    set number
  else
    set relativenumber
  endif
endfunc
nnoremap <C-n> :call NumberToggle()<cr>
:au FocusLost * :set number
:au FocusGained * :set relativenumber

" ==== Vundle ====
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" Bundles:
" * github
Bundle 'altercation/vim-colors-solarized'
Bundle 'scrooloose/nerdtree'
Bundle 'msanders/snipmate.vim'
Bundle 'scrooloose/syntastic'
Bundle 'kien/ctrlp.vim'
Bundle 'nvie/vim-flake8'

" Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}

" * vim-scripts repos
" Bundle 'L9'
" Bundle 'FuzzyFinder'

" * non github repos
" Bundle 'git://git.wincent.com/command-t.git'

filetype plugin indent on     " required by vundle

" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..

" === solarized ===
syntax enable
set background=dark
colorscheme solarized

" === shortcut ===
:map <C-Q> :NERDTreeToggle<CR>
:imap <C-Q> <ESC>:NERDTreeToggle<CR>a
:map <C-X> "+
:map <C-S> :w<CR>
:imap <C-S> <ESC>:w<CR>a

autocmd BufWritePre * :%s/\s\+$//e " remove trailing on save

" 80 col
if exists('+colorcolumn')
  set colorcolumn=80
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

