"# Core Setup
set nocompatible               " be iMproved
filetype off                   " required by vundle

set mouse=a
set backspace=2

"## No Menus
set guioptions+=lrbmTLce
set guioptions-=lrbmTLce
set guioptions+=c

"No Ex Mode
:map Q <Nop>

" remove trailing on save
autocmd BufWritePre * :%s/\s\+$//e

" change the mapleader from \ to ,
let mapleader=","

" scrolloff (cursor is always 7 lines away from border)
:set so=7
:set shiftwidth=4

:command Spell setlocal spell spelllang=en_us
:set nowrap
autocmd BufNewFile,BufReadPost *.md set filetype=markdown


"# Plugins with Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

"## System
Plugin 'altercation/vim-colors-solarized'
Plugin 'scrooloose/nerdtree'
Plugin 'msanders/snipmate.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'bling/vim-airline'
Plugin 'tpope/vim-fugitive' " git
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdcommenter'

"## Tools
Plugin 'vim-scripts/DrawIt'
Plugin 'lervag/vimtex'
Plugin 'Lokaltog/vim-easymotion'

"## Clojure
Plugin 'tpope/vim-fireplace'
Plugin 'tpope/vim-surround'
Plugin 'venantius/vim-cljfmt'
Plugin 'guns/vim-clojure-static'
Plugin 'guns/vim-clojure-highlight'
Plugin 'kien/rainbow_parentheses.vim'

"## Python
" Crappy plugin that crashed my vims 100% of the time
" Plugin 'klen/python-mode'

" TODO: find motivation to finally learn paredit
" Plugin 'vim-scripts/paredit.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required


"# Configuration
" ctrl p ignore
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.class


"# Theming
syntax enable
set background=dark
colorscheme solarized
:set guifont=Inconsolata\ 18

"## 80 col line
if exists('+colorcolumn')
  set colorcolumn=80
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

"##  Status Line
:set laststatus=2   "display the statusline all the time
set statusline=%<\ %n:%f\ %m%r%y%{\"[\".(&fenc==\"\"?&enc:&fenc).\"]\ \"}%=%-35.(line:\ %l\ of\ %L,\ col:\ %c%V\ (%P)%)

"## Tab completion in cmd line
set wildmode=longest,list,full
set wildmenu


"## Line Numbers
:set number         "line numbering
:set relativenumber

function! NumberToggle()
  if(&relativenumber == 1)
    set norelativenumber
  else
    set relativenumber
  endif
endfunc

nnoremap <C-n> :call NumberToggle()<cr>

"## Raindbow Parenthesis
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0

" always on
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

"# Bindings

"## Simplify

"system copy and paste
:map <C-X> "+

"when a IDE user takes your keyboard
:map <C-S> :w<CR>
:imap <C-S> <ESC>:w<CR>a

"## Features
:map <C-Q> :NERDTreeToggle<CR>
:imap <C-Q> <ESC>:NERDTreeToggle<CR>a

:map <C-t> :RainbowParenthesesToggle<CR>
:imap <C-t> <ESC>:RainbowParenthesesToggle<CR>a

"## Buffer navigation
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <C-h> <C-w>h


"# Omnicompletion
set omnifunc=syntaxcomplete#Complete

"" omnicompletion : words
inoremap <leader><TAB> <C-x><C-o>

"" omnicompletion : filenames
"inoremap <leader>: <C-x><C-f>
""
"" omnicompletion : lines
"inoremap <leader>= <C-x><C-l>


" :imap <C-C> <ESC>]si
" :imap <C-X> <ESC>[si
" :imap <C-D> <ESC>z=i
" :map <C-C> ]s
" :map <C-X> [s
" :map <C-D> z=
