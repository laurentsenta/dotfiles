# zmodload zsh/zprof

# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/dev/dotfiles/

# your project folder that we can `c [tab]` to
export PROJECTS=~/dev/

# Setup the plateform
case "`uname`" in
    "Linux")
	export PLATFORM="linux"
	;;
    "Darwin")
	export PLATFORM="macos"
	stty -ixon # Deactivate special handling of ctrl-s / ctrl-q
	;;
    *)
	>&2 echo "Unknown platform: `uname`"
	export PLATFORN="unknown"
	;;
esac

# use .localrc for SUPER SECRET CRAP that you don't
    # want in your public, versioned repo.
    if [[ -a ~/.localrc ]]
    then
	source ~/.localrc
    fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/*/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
    source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
    source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
# https://medium.com/@dannysmith/little-thing-2-speeding-up-zsh-f1860390f92
# init completion once every 24H
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
      compinit
done
compinit -C


# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
    source $file
done

unset config_files

source ${ZSH}/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# because we are civilized people
set -o vi

# http://unix.stackexchange.com/questions/44115/how-do-i-perform-a-reverse-history-search-in-zshs-vi-mode
    bindkey "^R" history-incremental-search-backward

    bindkey -M vicmd "/" vi-history-search-backward
    bindkey -M vicmd "?" vi-history-search-forward
    bindkey -M vicmd "n" vi-repeat-search
    bindkey -M vicmd "N" vi-rev-repeat-search

# http://dougblack.io/words/zsh-vi-mode.html
export KEYTIMEOUT=1

set blink-matching-paren on

# poupou's inline vim editor
autoload edit-command-line; zle -N edit-command-line
bindkey -M vicmd v edit-command-line

# export PATH="$HOME/.yarn/bin:$PATH"

# Lazy Load node & nvm stuffs:
# https://gist.github.com/fl0w/07ce79bd44788f647deab307c94d6922
#
export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Add every binary that requires nvm, npm or node to run to an array of node globals
NODE_GLOBALS=(`find ~/.nvm/versions/node -maxdepth 3 -type l -wholename '*/bin/*' | xargs -n1 basename | sort | uniq`)
NODE_GLOBALS+=("node")
NODE_GLOBALS+=("nvm")
NODE_GLOBALS+=("yarn")
#
# # Lazy-loading nvm + npm on node globals call
load_nvm () {
    export NVM_DIR="$HOME/.nvm"
    . "${NVM_DIR}/nvm.sh"
    # [ -s "$(brew --prefix nvm)/nvm.sh" ] && . "$(brew --prefix nvm)/nvm.sh"
}

# Making node global trigger the lazy loading
for cmd in "${NODE_GLOBALS[@]}"; do
    eval "${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} \$@ }"
done

# zprof

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/laurent/dev/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/laurent/dev/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/laurent/dev/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/laurent/dev/google-cloud-sdk/completion.zsh.inc'; fi

export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/dev
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
source /usr/local/bin/virtualenvwrapper.sh

export ANDROID_SDK=/Users/laurent/Library/Android/sdk
export PATH=/Users/laurent/Library/Android/sdk/platform-tools:$PATH
